{"version":3,"sources":["reportWebVitals.js","logo.svg","view/hello.js","App.js","view/clock.js","view/list.js","view/event.js","view/condition.js","view/form.js","view/navbar.js","view/improve.js","hook/effect.js","hook/dynamic-effect.js","hook/trap-effect.js","hook/custom-hook.js","util/debounce.js","util/throttle.js","hook/use-custom-hook.js","antd/antd-demo.js","mobx/mobx-demo.js","senior/context.js","mobx/observer-demo.js","mobx/mobx-effect.js","hook/ref-demo.js","communication/communication-one.js","communication/communication-two.js","communication/communication-compose.js","sass/sass-demo.js","view/not-found.js","util/service.js","hook/service-demo.js","senior/use-memo-demo.js","HOC/memo-demo.js","util/count.js","senior/reducer-demo.js","senior/use-ref-demo.js","senior/use-array-demo.js","bank/timer-demo.js","bank/parent-child-demo.js","redux/redux-use-one.js","redux/redux-use-two.js","framework/fw-child.js","framework/model.js","framework/fw-parent.js","cookies/cookies-demo.js","components/verificationCodeInput.js","components/count.js","components_use/input-use.js","components/aDialog.js","components/bDialog.js","components/dialog.js","components_use/dialog-use.js","shareState/shareState.js","components/input.js","components/useInput.js","components_use/three-input.js","DI/stuService.js","DI/useService.js","DI/stu1.js","DI/stu2.js","DI/stu.js","memo/memo.js","memo/notMemo.js","memo/useReactMemoDemo.js","echarts/echartsDemo.js","shrink/shrinkDemo.js","heroes/heroes-demo.js","router/index.js","store/AppStore.js","store/ElseStore.js","store/redux/store.js","store/redux/reducer.js","index.js","components/VerificationCodeInput.module.scss","components/Dialog.module.scss"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Hello","props","style","color","name","App","history","useHistory","className","src","logo","alt","onClick","push","Clock","useState","Date","date","setDate","setInterval","toLocaleTimeString","List","list","map","num","String","Event","log","e","console","Condition","error","info","numA","numB","ConditionExample","firstCond","secondCond","Form","val","setVal","onSubmit","event","alert","preventDefault","value","onChange","target","type","Nav","children","NavLink","version","github","Toggle","child","useParams","obj","condition","form","NavBar","selectedID","setSelectedID","match","useRouteMatch","id","label","url","item","to","path","TemperatureInput","c","f","scale","temperature","onTemperatureChange","StateImprove","setTemperature","setScale","celsius","fahrenheit","toCelsius","toFahrenheit","Example","count","setCount","setList","initData","a","axios","get","resp","data","useEffect","document","title","DynamicEffect","language","setLanguage","setInfo","method","params","avatar_large","header","searchLabel","fullName","TrapEffect","window","addEventListener","handleResize","removeEventListener","useArrays","initVal","methods","pop","slice","debounce","fn","delay","args","timer","clearTimeout","callNow","setTimeout","apply","throttle","call","CustomUse","addCount","deps","current","useRef","useCallback","useDebounce","inputEl","stateInputEl","stateInputVal","setStateInputVal","elseVal","setElseVal","elseFn","useThrottle","ref","onKeyPress","AntdDemo","span","placeholder","MobxDemo","todo","useLocalObservable","done","innerCount","toggle","this","addInnerCount","outerCount","addOuterCount","hookCount","setHookCount","useObserver","themes","textColor","blockColor","background","ThemeContext","React","createContext","SettingBlock","overflow","mainTitle","subtitle","SettingItem","theme","useContext","SettingBox","setTheme","Provider","checked","ObserverDemo","store","useLocalStore","MobxEffect","handleChange","handleInfo","languageList","Option","Select","RefDemo","len","length","JSON","stringify","CommunicationOne","inject","AppStore","ElseStore","addLibrary","toDoList","useLibraries","CommunicationTwo","CommunicationCompose","SassDemo","NotFound","service","create","baseURL","timeout","withCredentials","interceptors","request","use","config","Loading","show","content","size","hide","Promise","reject","response","ServiceDemo","UseMemoDemo","isMobile","setIsMobile","height","setHeight","bgHeight","useMemo","min","max","step","MemoComponentOne","MemoComponentTwo","MemoComponentThree","MemoComponentFour","number","MCTwo","memo","MCThree","MCF","MemoDemo","setNumber","danger","reducer","state","action","payload","Error","ReducerDemo","useReducer","dispatch","UseRefDemo","lastCount","lastCountCopy","useCurrent","refBoxOne","refBoxTwo","querySelector","UseArrayDemo","pushList","popList","user","pushUser","TimerDemo","setTimer","interval","clearInterval","padding","ParentChildDemo","totalTimer","setTotalTimer","connect","counter","flag","setFlag","useDispatch","useStore","getState","idx","deleteToDoItem","task","FWChild","logFn","logInput","onInput","logTable","table","b","FWParent","useVal","addVal","CookiesDemo","VerificationCodeInput","setVerificationCode","bind","setBind","codeList","setCodeList","inputs","querySelectorAll","handleBackspace","currentInput","previousInput","previousElementSibling","focus","handleArrowLeft","handleArrowRight","nextInput","nextElementSibling","select","forEach","input","key","keyCode","index","join","display","maxLength","pattern","styles","verificationCodeInput","Count","InputUse","verificationCode","ADialog","width","BDialog","A","B","Dialog","displayDialog","setDisplayDialog","createPortal","overlay","wrapper","body","DialogUse","backgroundColor","ShareState","Child1","Child2","inlineCount","setInlineCount","Child3","alignItems","justifyContent","Input","border","defaultValue","UseInput","Random","rand1","Math","ceil","random","rand2","ThreeInput","focusFlags","setFocusFlags","i","blur","click","onFocus","onBlur","StuService","_name","_age","age","useService","setName","changeName","Stu1","ss","getName","Stu2","Stu","Memo","NotMeme","UseReactMemoDemo","EChartsDemo","option","tooltip","trigger","legend","top","orient","x","y","series","radius","center","avoidLabelOverlap","position","emphasis","fontSize","fontWeight","labelLine","ShrinkDemo","navEl","logoEl","handleScroll","scrollTop","documentElement","marginBottom","transition","marginTop","HeroesDemo","process","REACT_APP_API_URL","res","PageRouter","exact","from","render","observable","library","addTimer","resetTimer","rootReducer","combineReducers","completed","filter","_","createStore","ReactDOM","stores","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a66c4111.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/**\r\n * 函数式组件\r\n * @param props\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\n// 组件名称必须以大写开头(为了与原生html标签做区分)\r\nconst Hello = props => {\r\n    // 不更改入参的函数为纯函数，所有 React 组件都必须像纯函数一样保护它们的 props 不被更改\r\n    // props.name = 'null'\r\n    // ()非必须\r\n    return <h1 style={{color: '#fff'}}>Hello, {props.name}</h1>\r\n}\r\n\r\nexport default Hello","import logo from './logo.svg'\nimport Hello from './view/hello'\nimport {useHistory} from 'react-router-dom'\n\nconst App = () => {\n    const history = useHistory()\n    const toLearn = () => {\n        history.push('/detail/list')\n    }\n    const toRedux = () => {\n        history.push('/redux-use-one')\n    }\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                <Hello name=\"react\"/>\n                <p>\n                    Edit <code>src/App.js</code> and save to reload.\n                </p>\n                <span className=\"App-link\" onClick={toLearn}>\n                    Learn React\n                </span>\n                <br/>\n                <span className=\"App-link\" onClick={toRedux}>\n                    Learn Redux\n                </span>\n            </header>\n        </div>\n    )\n}\n\n\nexport default App\n","/**\r\n * 状态演示\r\n * @param props\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\n\r\nimport React, {useState} from \"react\";\r\n\r\n// 使用了hook api，简化了代码\r\nconst Clock = () => {\r\n    let [date, setDate] = useState(new Date())\r\n    setInterval(()=>{\r\n        setDate(new Date())\r\n    }, 1000)\r\n    return (\r\n        <h2>Lucky to see you at {date.toLocaleTimeString()}</h2>\r\n    )\r\n}\r\n\r\nexport default Clock","/**\r\n * 列表渲染\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nconst List = () => {\r\n    const nums = [3, 5, 7, 9, 11]\r\n    // key 帮助 React 识别哪些元素改变了，比如被添加或删除。因此你应当给数组中的每一个元素赋予一个确定的标识\r\n    const list = nums.map(num => <li key={String(num)}>{num}</li>)\r\n    return(\r\n        <div>\r\n            <h3>普通列表如何渲染</h3>\r\n            <ul>\r\n                {list}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List","const Event = () => {\r\n    // react事件命名采用驼峰法\r\n    const log = e => {\r\n        console.log('Log the info', e)\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={log}> No Params </button><br/>\r\n            <button onClick={e => log(e)}> Params </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Event","/**\r\n * 展示了四种条件判断的例子\r\n * 1 直接return\r\n * 2 赋值jsx于变量\r\n * 3 &&\r\n * 4 三目运算符\r\n * @param props\r\n * @returns {JSX.Element|null}\r\n * @constructor\r\n */\r\nconst Condition = props => {\r\n    // 可以阻止组件渲染\r\n    if(props.error) return null\r\n    \r\n    let info\r\n    if(props.numA + props.numB > 0){\r\n        info = <div>numA 和 numB 的值大于 0</div>\r\n    }else {\r\n        info = <div>numA 和 numB 的值小于 0</div>\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {/*在花括号内部进行判断*/}\r\n            { props.numA > 0 &&\r\n            <div>\r\n                numA 大于 0\r\n            </div>\r\n            }\r\n            {\r\n                props.numB > 0\r\n                    ? <div> numB 大于 0 </div>\r\n                    : <div> numB 小于等于 0 </div>\r\n            }\r\n            {info}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ConditionExample = () => {\r\n    const firstCond = {\r\n        numA: -3,\r\n        numB: 2\r\n    }\r\n    const secondCond = {\r\n        numA: 3,\r\n        numB: -2\r\n    }\r\n    const thirdCond = {\r\n        error: true\r\n    }\r\n    return (\r\n        <div>\r\n            <Condition numA={firstCond.numA} numB={firstCond.numB}/>\r\n            <hr />\r\n            <Condition numA={secondCond.numA} numB={secondCond.numB}/>\r\n            <hr />\r\n            <Condition error={thirdCond.error}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConditionExample","/**\r\n * 表单提交\r\n */\r\nimport {useState} from 'react'\r\nimport React from 'react'\r\n\r\nconst Form = () => {\r\n    let [val, setVal] = useState('')\r\n    const handleSubmit = event => {\r\n        alert('提交的名字: ' + val)\r\n        event.preventDefault()\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <label>\r\n                名字：\r\n                <input value={val} onChange={event => {\r\n                    setVal(val = event.target.value)\r\n                }}/>\r\n            </label>\r\n            <input type=\"submit\" value=\"提交\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\n// class Form extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {value: ''};\r\n//\r\n//         this.handleChange = this.handleChange.bind(this);\r\n//         this.handleSubmit = this.handleSubmit.bind(this);\r\n//     }\r\n//\r\n//     handleChange(event) {\r\n//         this.setState({value: event.target.value});\r\n//     }\r\n//\r\n//     handleSubmit(event) {\r\n//         alert('提交的名字: ' + this.state.value);\r\n//         event.preventDefault();\r\n//     }\r\n//\r\n//     render() {\r\n//         return (\r\n//             <form onSubmit={this.handleSubmit}>\r\n//                 <label>\r\n//                     名字:\r\n//                     <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n//                 </label>\r\n//                 <input type=\"submit\" value=\"提交\" />\r\n//             </form>\r\n//         );\r\n//     }\r\n// }\r\n\r\nexport default Form","/**\r\n * 有些组件无法提前知晓它们子组件的具体内容\r\n * 我们建议这些组件使用一个特殊的 children prop 来将他们的子组件传递到渲染结果中\r\n */\r\n\r\nimport {useState} from 'react'\r\nimport './../App.css'\r\nimport { BrowserRouter, Switch, useRouteMatch, Link, Route, useParams } from \"react-router-dom\";\r\n\r\n// 组件\r\nimport List from \"./list\"\r\nimport Event from \"./event\"\r\nimport ConditionExample from \"./condition\"\r\nimport Form from \"./form\"\r\n\r\n// 约定的children\r\nconst Nav = props => (\r\n    <nav className=\"nav\">\r\n        { props.children }\r\n    </nav>\r\n)\r\n\r\n// 可以不使用children, 自行约定\r\nconst NavLink = props => (\r\n    <div className=\"nav-link\">\r\n        {props.version}\r\n        {props.github}\r\n    </div>\r\n)\r\n\r\nconst NavBar = () => {\r\n    const navList = [\r\n        {\r\n            id: 1,\r\n            label: '列表',\r\n            url: 'list'\r\n        },\r\n        {\r\n            id: 2,\r\n            label: '事件',\r\n            url: 'event'\r\n        },\r\n        {\r\n            id: 3,\r\n            label: '条件',\r\n            url: 'condition'\r\n        },\r\n        {\r\n            id: 4,\r\n            label: '表单',\r\n            url: 'form'\r\n        }\r\n    ]\r\n    let [selectedID, setSelectedID] = useState(1)\r\n\r\n    let match = useRouteMatch()\r\n    console.log('match: ', match)\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Nav>\r\n                {navList.map(item=>(\r\n                    <Link to={`${match.url}/${item.url}`} key={item.id}>\r\n                        <div className={`nav-item ${item.id === selectedID && 'nav-item-select'}`}\r\n                             onClick={()=>{setSelectedID(selectedID = item.id)}}>\r\n                            { item.label }\r\n                        </div>\r\n                    </Link>\r\n                ))}\r\n                <NavLink\r\n                    version={\r\n                        <span className=\"nav-link-item\">v17.0.1</span>\r\n                    }\r\n                    github={\r\n                        <span className=\"nav-link-item\">GitHub</span>\r\n                    }\r\n                />\r\n            </Nav>\r\n            {\r\n                <Switch>\r\n                    <Route path={`${match.path}/:child`}>\r\n                        <Toggle />\r\n                    </Route>\r\n                </Switch>\r\n            }\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nconst Toggle = () => {\r\n    // child是获取的动态参数，通过useParams\r\n    const { child } = useParams()\r\n    console.log('now', child)\r\n    const obj = {\r\n        list: <List />,\r\n        event: <Event />,\r\n        condition: <ConditionExample />,\r\n        form: <Form />\r\n    }\r\n    return (\r\n        <div>\r\n            <h2> 路由传来的参数: {child} </h2>\r\n            <hr />\r\n            {obj[child]}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default NavBar","/**\r\n * 状态提升\r\n * 将子组件的state提升为父组件的props，以实现状态共享\r\n */\r\nimport {useState} from 'react'\r\n\r\nconst TemperatureInput = props => {\r\n    const scaleNames = {\r\n        c: 'Celsius',\r\n        f: 'Fahrenheit'\r\n    }\r\n    const handleChange = event => {\r\n        props.onTemperatureChange(event.target.value)\r\n    }\r\n    return (\r\n        <fieldset>\r\n            <legend> Enter temperature in {scaleNames[props.scale]} </legend>\r\n            {/*想要两个组件保持同步改变，当然不能每个组件各自维持state，必须依赖于上级流动的props*/}\r\n            {/*通过父组件传递的props（onTemperatureChange）来更改*/}\r\n            {/*注：temperature 和 onTemperatureChange 无特殊意义*/}\r\n            <input value={props.temperature} onChange={handleChange}/>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\nconst StateImprove = props => {\r\n    // 转换成摄氏度\r\n    const toCelsius = fahrenheit => (fahrenheit - 32) * 5 / 9\r\n    // 转换成华氏度\r\n    const toFahrenheit = celsius => (celsius * 9 / 5) + 32\r\n\r\n    let [temperature, setTemperature] = useState('')\r\n    let [scale, setScale] = useState('')\r\n\r\n    // 这里的val是 TemperatureInput 组件中传递的event.target.value\r\n    const handleCelsiusChange = val => {\r\n        setScale(scale = 'c')\r\n        setTemperature(temperature = val)\r\n    }\r\n    const handleFahrenheitChange = val => {\r\n        setScale(scale = 'f')\r\n        setTemperature(temperature = val)\r\n    }\r\n\r\n    const celsius = scale === 'c' ? temperature : toCelsius(temperature)\r\n    const fahrenheit = scale === 'f' ? temperature : toFahrenheit(temperature)\r\n\r\n    return (\r\n        <div>\r\n            <h2>状态提升</h2>\r\n            <TemperatureInput scale=\"c\" temperature={celsius} onTemperatureChange={handleCelsiusChange}/>\r\n            <TemperatureInput scale=\"f\" temperature={fahrenheit} onTemperatureChange={handleFahrenheitChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StateImprove","/**\r\n * Effect 影响、作用\r\n * 数据获取，设置订阅以及手动更改 React 组件中的 DOM 都属于副作用\r\n * 在 React 组件中有两种常见副作用操作：需要清除的和不需要清除的\r\n * React 何时清除 effect？ React 会在组件卸载的时候执行清除操作\r\n * Effect 的清除阶段在每次重新渲染时都会执行，而不是只在卸载组件的时候执行一次\r\n */\r\n\r\n// 请求链接\r\n// \"proxy\": \"https://www.v2ex.com/api\",\r\n\r\n// effect 影响、作用\r\nimport React, {useState, useEffect} from 'react'\r\nimport axios from \"axios\"\r\nimport '../App.css'\r\n\r\nconst Example = () => {\r\n    const [count, setCount] = useState(0)\r\n    let [list, setList] = useState([])\r\n\r\n    // initData使用了async，返回了一个隐式的promise\r\n    const initData = async () => {\r\n        // 可以更改为axios.get().then()的形式获取数据去掉async\r\n        // axios.get('/topics/hot.json').then(resp=>{\r\n        //     setList(resp.data)\r\n        // })\r\n\r\n        // 一定要使用async的话，使用自执行函数\r\n        const resp = await axios.get('/topics/hot.json')\r\n        setList(resp.data)\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     document.title = `You clicked ${count} times`\r\n    //     axios.get('topics/hot.json').then(resp=>{\r\n    //         // 使用setList改变了state, 使得组件重新渲染，因此又调用了useEffect， 造成了死循环\r\n    //         setList(resp.data)\r\n    //     })\r\n    // })\r\n\r\n    // 报warning: Effect callbacks are synchronous to prevent race conditions. Put the async function inside\r\n    // effect hook 要么什么都不返回，要么返回一个清理函数，因此报错\r\n    // useEffect(initData, [])\r\n\r\n    // 解决warning, 修改如下\r\n    // 每次渲染后都执行清理或者执行 effect 可能会导致性能问题，deps中添加了list, 仅在list更改时更新\r\n\r\n    // 在本案例中list是引用类型，在js中，引用类型互不相等，useEffect认为list发生了更改，因此一直重渲染\r\n    // 使用JSON.stringify转换为基本类型\r\n    useEffect(() => {\r\n        // initData()\r\n        (initData)()\r\n\r\n        // deps如果添加了JSON.stringify(list)，会导致请求两次数据，因为初始的list为[]\r\n    }, [])\r\n\r\n    // 可以使用多个effect\r\n    useEffect(() => {\r\n        document.title = `You clicked ${count} times`\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <p> You clicked {count} times </p>\r\n            <button onClick={() => setCount(count + 1)}>\r\n                Click Me\r\n            </button>\r\n            <p> The following is an array </p>\r\n            <hr />\r\n            {\r\n                list.map(item => (\r\n                    <p key={item.id} className=\"list-item\"> {item.title} </p>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n// 这串代码在dom加载完成后，文档的标题仍为React App，必须触发changeCount后才能改变文档标题\r\n// const Example = () => {\r\n//     const [count, setCount] = useState(0)\r\n//     const changeCount = () => {\r\n//         setCount(count + 1)\r\n//         document.title = `You clicked ${count} times`;\r\n//     }\r\n//\r\n//     return (\r\n//         <div>\r\n//             <p> You clicked {count} times </p>\r\n//             <button onClick={changeCount}>\r\n//                 Click Me\r\n//             </button>\r\n//         </div>\r\n//     )\r\n//\r\n// }\r\n\r\nexport default Example","/**\r\n * 使用规则\r\n * 1 只在最顶层使用hook(不要在循环，条件或嵌套函数中调用 Hook)\r\n * 2 只在 React 函数中调用 Hook(不要在普通的 JavaScript 函数中调用 Hook)\r\n */\r\nimport {useState, useEffect} from 'react'\r\nimport axios from \"axios\"\r\n\r\nconst DynamicEffect = () => {\r\n    const [language, setLanguage] = useState('js')\r\n    const [info, setInfo] = useState({})\r\n    const languageList = [\r\n        {\r\n            searchLabel: 'js',\r\n            fullName: 'JavaScript'\r\n        },\r\n        {\r\n            searchLabel: 'python',\r\n            fullName: 'Python'\r\n        },\r\n        {\r\n            searchLabel: 'go',\r\n            fullName: 'Golang'\r\n        },\r\n        {\r\n            searchLabel: 'java',\r\n            fullName: 'Java'\r\n        },\r\n        {\r\n            searchLabel: 'ruby',\r\n            fullName: 'Ruby'\r\n        },\r\n        {\r\n            searchLabel: 'php',\r\n            fullName: 'PHP'\r\n        }\r\n    ]\r\n    const initData = async () => {\r\n        const resp = await axios({\r\n            url: '/nodes/show.json',\r\n            method: 'get',\r\n            params: {\r\n                name: language\r\n            }\r\n        })\r\n        setInfo(resp.data)\r\n    }\r\n    const handleChange = event => {\r\n        setLanguage(event.target.value)\r\n    }\r\n    useEffect(() => {\r\n        initData()\r\n    }, [language])\r\n    return (\r\n        <div className=\"language-box\">\r\n            <img src={info.avatar_large} alt=\"logo\" className=\"img-margin\"/>\r\n            <h2>{info.title}</h2>\r\n            <h4>{info.header}</h4>\r\n            <span>Select the programming language</span><br/>\r\n            <select value={language} onChange={handleChange}>\r\n                {languageList.map(item => <option key={item.searchLabel} value={item.searchLabel}> {item.fullName} </option>)}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DynamicEffect","import {useState, useEffect} from 'react'\r\n\r\nconst TrapEffect = () => {\r\n    const [count, setCount] = useState(0)\r\n    useEffect(() => {\r\n        // count每次更新都会重新赋值handleResize\r\n        // 如果不添加count，则只执行第一次的handleResize，第一次的handleResize的count为0\r\n        window.addEventListener('resize', handleResize)\r\n        return () => window.removeEventListener('resize', handleResize)\r\n        // 当不添加count时候一直输出count is 0\r\n        // 当deps为空不添加count则只执行一次\r\n        // 当然也可以不添加第二个参数，但性能会变差\r\n    }, [count])\r\n\r\n\r\n    const handleResize = () => {\r\n        // 输出count\r\n        console.log(`count is ${count}`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <button onClick={() => setCount(count + 1)}>+</button>\r\n            <h1>{count}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrapEffect","/**\r\n * 自定义hook\r\n */\r\nimport {useState, useEffect, useRef, useCallback, useMemo} from 'react'\r\nimport axios from \"axios\"\r\n\r\n// 分页组件\r\nconst useList = current => {\r\n    const [list, setList] = useState([])\r\n    const getData = async () => {\r\n        const resp = await axios({\r\n            url: '/equipmentfault/get-smart-project-list',\r\n            method: 'get',\r\n            params: {\r\n                current,\r\n                size: 5\r\n            }\r\n        })\r\n        setList(resp.data.data.records)\r\n    }\r\n    useEffect(() => {\r\n        (getData)()\r\n    }, [])\r\n    return list\r\n}\r\n\r\n// 定义title\r\nconst useTitle = title => {\r\n    useEffect(() => {\r\n        document.title = title\r\n    }, [title])\r\n}\r\n\r\nconst useDebounce = (fn, delay, deps) => {\r\n    const {current} = useRef({fn, timer: null})\r\n    useEffect(() => {\r\n        current.fn = fn\r\n    }, [fn])\r\n\r\n    return useCallback((...args) => {\r\n        if (current.timer) clearTimeout(current.timer)\r\n        const callNow = !current.timer\r\n        current.timer = setTimeout(() => {\r\n            current.timer = null\r\n        }, delay)\r\n        if (callNow) current.fn.call(this, ...args)\r\n    }, deps)\r\n\r\n}\r\n\r\nconst useThrottle = (fn, delay, deps) => {\r\n    const {current} = useRef({fn, timer: null})\r\n    useEffect(() => {\r\n        current.fn = fn\r\n    }, [fn])\r\n\r\n    return useCallback((...args) => {\r\n        if (!current.timer) {\r\n            current.timer = setTimeout(() => {\r\n                delete current.timer\r\n            }, delay)\r\n            current.fn.call(this, ...args)\r\n        }\r\n    }, deps)\r\n}\r\n\r\nconst useCurrent = state => {\r\n    const ref = useRef(state)\r\n    useEffect(() => {\r\n        ref.current = state\r\n    }, [state])\r\n    return ref\r\n}\r\n\r\nconst useMethods = (initialValue, methods) => {\r\n    const [value, setValue] = useState(initialValue)\r\n    const boundMethods = useMemo(\r\n        () => Object.entries(methods).reduce(\r\n            (methods, [name, fn]) => {\r\n                const method = (...args) => {\r\n                    setValue(value => fn(value, ...args))\r\n                }\r\n                methods[name] = method\r\n                return methods\r\n            },\r\n            {}\r\n        ),\r\n        [methods]\r\n    )\r\n    console.log('boundMethods', boundMethods)\r\n    return [value, boundMethods]\r\n}\r\n\r\nconst arrayMethods = {\r\n    push(state, item) {\r\n        return state.concat(item)\r\n    },\r\n    pop(state) {\r\n        return state.slice(0, -1);\r\n    },\r\n    slice(state, start, end) {\r\n        return state.slice(start, end);\r\n    },\r\n    empty() {\r\n        return [];\r\n    },\r\n    set(state, newValue) {\r\n        return newValue;\r\n    },\r\n    remove(state, item) {\r\n        const index = state.indexOf(item);\r\n        if (index < 0) {\r\n            return state;\r\n        }\r\n        return [...state.slice(0, index), ...state.slice(index + 1)];\r\n    }\r\n};\r\n\r\nconst useArrays = (initVal = []) => {\r\n    const [val, setVal] = useState(initVal)\r\n    const methods = {\r\n        push(...item) {\r\n            setVal([...val, ...item])\r\n        },\r\n        pop() {\r\n            setVal(val.slice(0, -1))\r\n        }\r\n    }\r\n    return [val, methods]\r\n}\r\n\r\nconst useArray = (initialValue = []) => {\r\n    return useMethods(initialValue, arrayMethods);\r\n}\r\n\r\n\r\nexport {\r\n    useList,\r\n    useTitle,\r\n    useDebounce,\r\n    useThrottle,\r\n    useCurrent,\r\n    useArray,\r\n    useArrays\r\n}\r\n","const debounce = (fn, delay, ...args) => {\r\n    let timer = null\r\n    return () => {\r\n        if (timer) clearTimeout(timer)\r\n        const callNow = !timer\r\n        timer = setTimeout(() => {\r\n            timer = null\r\n        }, delay)\r\n        if (callNow) fn.apply(this, args)\r\n    }\r\n}\r\n\r\nexport default debounce","const throttle = (fn, delay, ...args) => {\r\n    let timer = null\r\n    return () => {\r\n        if (!timer) {\r\n            timer = setTimeout(() => {\r\n                fn.call(this, ...args)\r\n                timer = null\r\n            }, delay)\r\n        }\r\n    }\r\n}\r\n\r\nexport default throttle","import {useState, useRef, useEffect} from 'react'\r\nimport {useTitle, useDebounce, useThrottle} from \"./custom-hook\"\r\nimport debounce from \"../util/debounce\"\r\nimport throttle from \"../util/throttle\"\r\nimport axios from \"axios\"\r\n\r\nconst CustomUse = () => {\r\n    useTitle('使用自定义hook')\r\n    const [count, setCount] = useState(0)\r\n\r\n    ////////////////////////////////\r\n    // 防抖\r\n    ////////////////////////////////\r\n    const log = label => {\r\n        console.log('debounce', label)\r\n    }\r\n    const addCount = useDebounce(() => {\r\n        setCount(count + 7)\r\n    }, 1000, [])\r\n\r\n\r\n    ////////////////////////////////\r\n    // 节流\r\n    ////////////////////////////////\r\n\r\n    // 使用useRef获取dom节点\r\n    const inputEl = useRef(null)\r\n    const stateInputEl = useRef(null)\r\n    let [stateInputVal, setStateInputVal] = useState('')\r\n    const [elseVal, setElseVal] = useState('s')\r\n    // const elseValFn = () => {\r\n    //     setElseVal(stateInputVal)\r\n    // }\r\n\r\n    useEffect(()=>{\r\n        // setElseVal(stateInputVal)\r\n        elseFn()\r\n    }, [stateInputVal])\r\n\r\n    const elseFn =  useThrottle(() => {\r\n        setElseVal(stateInputVal)\r\n    }, 500, [])\r\n\r\n    const search = () => {\r\n        axios({\r\n            url: '/nodes/show.json',\r\n            method: 'get',\r\n            params: {\r\n                name: inputEl.current.value\r\n            }\r\n        }).then(resp=>{\r\n            console.log(resp.data)\r\n        })\r\n    }\r\n    // inputEl.current.onkeypress = throttle(search, 1000)\r\n\r\n    return (\r\n        <div>\r\n            <h1>自定义HOOK演示</h1>\r\n            <hr/>\r\n\r\n            <h2>防抖演示</h2>\r\n            <p>普通防抖函数作用于无状态函数</p>\r\n            <button onClick={debounce(log, 1000, 'Hello World')}>无状态</button>\r\n            <br/>\r\n            <p>当防抖作用的是有状态的事件时，普通防抖函数无效</p>\r\n            <button onClick={addCount}>有状态</button>\r\n            <br/>\r\n            count: {count}\r\n            <hr />\r\n\r\n            <h2>节流演示</h2>\r\n            <p>无状态</p>\r\n            <input ref={inputEl} onKeyPress={ throttle(search, 500) } />\r\n            <p>有状态</p>\r\n            <input ref={stateInputEl} value={stateInputVal} onChange={event => setStateInputVal(event.target.value)}/>\r\n            {stateInputVal}<br />\r\n            {elseVal}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomUse\r\n","import {useState} from 'react'\r\nimport {Button, Input, Row, Col} from 'antd'\r\n\r\nconst AntdDemo = () => {\r\n    const [val, setVal] = useState('')\r\n    const log = () => {\r\n        console.log(val)\r\n    }\r\n    return (\r\n        <div>\r\n            <Row className=\"row-margin\">\r\n                <Col span={24} className=\"col-bg-one center\">col</Col>\r\n            </Row>\r\n            <Row className=\"row-margin\">\r\n                <Col span={12} className=\"col-bg-one center\">col-12</Col>\r\n                <Col span={12} className=\"col-bg-two center\">col-12</Col>\r\n            </Row>\r\n            <Row className=\"row-margin\">\r\n                <Col span={8} className=\"col-bg-one center\">col-8</Col>\r\n                <Col span={8} className=\"col-bg-two center\">col-8</Col>\r\n                <Col span={8} className=\"col-bg-one center\">col-8</Col>\r\n            </Row>\r\n            <Row className=\"row-margin\">\r\n                <Col span={6} className=\"col-bg-one center\">col-6</Col>\r\n                <Col span={6} className=\"col-bg-two center\">col-6</Col>\r\n                <Col span={6} className=\"col-bg-one center\">col-6</Col>\r\n                <Col span={6} className=\"col-bg-two center\">col-6</Col>\r\n            </Row>\r\n            <Input placeholder=\"Basic usage\" value={val} onChange={event => {\r\n                setVal(event.target.value)\r\n            }}/>\r\n            <Button type=\"primary\" onClick={log}>Primary</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AntdDemo","import {useLocalObservable, useObserver} from 'mobx-react'\r\nimport {useState} from 'react'\r\n\r\nconst MobxDemo = () => {\r\n    // useLocalObservable创建了一个可观察的store\r\n    const todo = useLocalObservable(() => ({\r\n        title: \"Test\",\r\n        done: true,\r\n        innerCount: 1,\r\n        toggle() {\r\n            this.done = !this.done\r\n        },\r\n        addInnerCount() {\r\n            this.innerCount += 1\r\n        }\r\n    }))\r\n    let outerCount = 1\r\n    const addOuterCount = () => {\r\n        outerCount += 1\r\n    }\r\n    const [hookCount, setHookCount] = useState(1)\r\n    // useObserver是hook写法，等同于<Observer> JSX </Observer> 或 observer(()=>func)\r\n    return useObserver(() => (\r\n        <div>\r\n            <button onClick={todo.toggle}>Toggle</button>\r\n            <h2>\r\n                {todo.title} {todo.done ? \"[DONE]\" : \"[TODO]\"}\r\n            </h2>\r\n            <hr/>\r\n\r\n            <h3>useLocalObservable内部的可以自动响应数据的变化</h3>\r\n            <button onClick={todo.addInnerCount}>AddInnerCount</button>\r\n            <h2>\r\n                InnerCount: {todo.innerCount}\r\n            </h2>\r\n            <hr/>\r\n\r\n            <h3>useLocalObservable外部的无法自动响应数据的变化</h3>\r\n            <button onClick={addOuterCount}>AddOuterCount</button>\r\n            <h2>\r\n                OuterCount: {outerCount}\r\n            </h2>\r\n            <hr/>\r\n\r\n            <h3>observer()内同样可以使用hook</h3>\r\n            <button onClick={() => setHookCount(hookCount + 1)}>SetHookCount</button>\r\n            <h2>\r\n                HookCount: {hookCount}\r\n            </h2>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default MobxDemo","import React, {useState, useContext} from 'react'\r\nimport {Switch} from 'antd'\r\n\r\n\r\nconst themes = {\r\n    light: {\r\n        textColor: '#292929',\r\n        blockColor: '#fafafa',\r\n        background: '#f2f2f2'\r\n    },\r\n    dark: {\r\n        textColor: '#fcfcfd',\r\n        blockColor: '#282828',\r\n        background: '#0a0a0a'\r\n    }\r\n}\r\n\r\n\r\nconst ThemeContext = React.createContext(themes.light)\r\n\r\n// 全局属性\r\n// 设置可切换夜间模式\r\nconst SettingBox = () => {\r\n    const [theme, setTheme] = useState(themes.light)\r\n    const onChange = checked => {\r\n        checked ? setTheme(themes.dark) : setTheme(themes.light)\r\n    }\r\n    return (\r\n        <ThemeContext.Provider value={theme}>\r\n            <div className=\"setting-box\" style={{background: theme.background}}>\r\n                <SettingBlock/>\r\n                <div className=\"switch-box center\">\r\n                    <Switch onChange={onChange} />\r\n                </div>\r\n            </div>\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n\r\nconst SettingBlock = () => {\r\n    const settingList = [\r\n        {\r\n            id: 1,\r\n            mainTitle: '网络和互联网',\r\n            subtitle: 'WLAN、移动数据、绑定'\r\n        },\r\n        {\r\n            id: 2,\r\n            mainTitle: '已连接的设备',\r\n            subtitle: '蓝牙、屏幕共享、NFC'\r\n        },\r\n        {\r\n            id: 3,\r\n            mainTitle: '声音',\r\n            subtitle: '音量、铃声、通知声音'\r\n        }\r\n    ]\r\n    return (\r\n        <div style={{overflow: \"hidden\"}}>\r\n            {\r\n                settingList.map(item => (\r\n                    <SettingItem key={item.id} mainTitle={item.mainTitle} subtitle={item.subtitle}/>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst SettingItem = props => {\r\n    const theme = useContext(ThemeContext)\r\n    return (\r\n        <div className=\"setting-item\" style={{background: theme.blockColor, color: theme.textColor}}>\r\n            <div className=\"main-title\">\r\n                {props.mainTitle}\r\n            </div>\r\n            <div className=\"subtitle\">\r\n                {props.subtitle}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SettingBox","import {useLocalStore, useObserver} from \"mobx-react\"\r\n\r\nconst ObserverDemo = () => {\r\n    const store = useLocalStore(() => ({\r\n        count: 1\r\n    }))\r\n    const addCount = () => {\r\n        store.count += 1\r\n    }\r\n    return useObserver(() => (\r\n        <div>\r\n            <button onClick={addCount}>AddCount</button>\r\n            <h1>{store.count}</h1>\r\n        </div>\r\n    ))\r\n\r\n}\r\n\r\nexport default ObserverDemo\r\n","import {useLocalStore, useObserver} from 'mobx-react'\r\nimport {useEffect} from 'react'\r\nimport {Select} from 'antd'\r\nimport axios from \"axios\"\r\n\r\n\r\nconst MobxEffect = () => {\r\n    const store = useLocalStore(() => ({\r\n        language: 'js',\r\n        info: {},\r\n        // 此处定义的为action, 修改store的值必须在action内进行，如果直接修改，在string模式下会报warning\r\n        // 相当于mobx库的runInAction\r\n        handleChange(val) {\r\n            store.language = val\r\n        },\r\n        handleInfo(val){\r\n            store.info = val\r\n        }\r\n    }))\r\n    const languageList = [\r\n        {\r\n            searchLabel: 'js',\r\n            fullName: 'JavaScript'\r\n        },\r\n        {\r\n            searchLabel: 'python',\r\n            fullName: 'Python'\r\n        },\r\n        {\r\n            searchLabel: 'go',\r\n            fullName: 'Golang'\r\n        },\r\n        {\r\n            searchLabel: 'java',\r\n            fullName: 'Java'\r\n        },\r\n        {\r\n            searchLabel: 'ruby',\r\n            fullName: 'Ruby'\r\n        },\r\n        {\r\n            searchLabel: 'php',\r\n            fullName: 'PHP'\r\n        }\r\n    ]\r\n    const initData = async () => {\r\n        const resp = await axios({\r\n            url: '/nodes/show.json',\r\n            method: 'get',\r\n            params: {\r\n                name: store.language\r\n            }\r\n        })\r\n        store.handleInfo(resp.data)\r\n    }\r\n    useEffect(() => {\r\n        initData()\r\n    }, [store.language])\r\n    const {Option} = Select\r\n    return useObserver(() => (\r\n        <div className=\"language-box\">\r\n            <img src={store.info.avatar_large} alt=\"logo\" className=\"img-margin\"/>\r\n            <h2>{store.info.title}</h2>\r\n            <h4>{store.info.header}</h4>\r\n            <span>Select the programming language</span><br/>\r\n            <Select value={store.language} onChange={store.handleChange}>\r\n                {languageList.map(item => <Option key={item.searchLabel}\r\n                                                  value={item.searchLabel}> {item.fullName} </Option>)}\r\n            </Select>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default MobxEffect","import {useRef} from 'react'\r\n\r\nconst RefDemo = props => {\r\n    const val = useRef({\r\n        initVal: 'init_val',\r\n        list: [1, 3, 5, 7, 9]\r\n    })\r\n\r\n    const push = () => {\r\n        const len = val.current.list.length\r\n        val.current.list.push(val.current.list[len-1]+2)\r\n        console.log(val)\r\n    }\r\n    return (\r\n        <div>\r\n            {val.current.initVal}<br/>\r\n            {val.initVal}<br />\r\n            <button onClick={push}>\r\n\r\n            </button>\r\n            {JSON.stringify(val)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RefDemo","import {inject, useObserver} from 'mobx-react'\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst CommunicationOne = inject('AppStore', 'ElseStore')(({AppStore, ElseStore}) => {\r\n    const push = () => {\r\n        AppStore.addLibrary('one')\r\n    }\r\n    return useObserver(() => (\r\n        <div>\r\n            {JSON.stringify(ElseStore.toDoList)}\r\n            <br />\r\n            <button onClick={push}>PUSH</button>\r\n            <br/>\r\n            <h2 style={{color: '#b77731'}}>\r\n                {JSON.stringify(AppStore.useLibraries)}\r\n            </h2>\r\n            <br/>\r\n            <Link to=\"/communication-two\">跳转TWO</Link>\r\n        </div>\r\n    ))\r\n})\r\n\r\nexport default CommunicationOne\r\n","import {inject, useObserver} from 'mobx-react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst CommunicationTwo = inject('AppStore')(({AppStore}) => {\r\n\r\n    const push= () => {\r\n        AppStore.addLibrary('two')\r\n    }\r\n    return useObserver(() => (\r\n        <div>\r\n            <button onClick={push}>PUSH</button>\r\n            <br/>\r\n            <h3 style={{color: '#796397'}}>\r\n                {JSON.stringify(AppStore.useLibraries)}\r\n            </h3>\r\n            <br/>\r\n            <Link to=\"/communication-one\">跳转ONE</Link>\r\n        </div>\r\n    ))\r\n})\r\n\r\nexport default CommunicationTwo\r\n","import CommunicationOne from \"./communication-one\"\r\nimport CommunicationTwo from \"./communication-two\"\r\n\r\nconst CommunicationCompose = () => {\r\n    return (\r\n        <div>\r\n            {/*状态会同步更新*/}\r\n            <CommunicationOne />\r\n            <CommunicationTwo />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommunicationCompose","import './../style/demo.scss'\r\n\r\n// 使用sass无需引入sass(package.json)\r\nconst SassDemo = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"outer-box center\">\r\n                <div className=\"inner-box\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SassDemo","const NotFound = () => {\r\n    return (\r\n        <h1>404 Not Found</h1>\r\n    )\r\n}\r\n\r\nexport default NotFound","import {Loading, ActivityIndicator} from \"zarm\"\r\nimport axios from \"axios\"\r\nimport React from \"react\";\r\n\r\nconst service = axios.create({\r\n    baseURL: '',\r\n    timeout: 10000,\r\n    withCredentials: true\r\n})\r\n\r\nservice.interceptors.request.use(\r\n    config => {\r\n        Loading.show({\r\n            content: <ActivityIndicator size=\"lg\"/>\r\n        })\r\n        return config\r\n    },\r\n    error => {\r\n        Loading.hide()\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nservice.interceptors.response.use(\r\n    response => {\r\n        Loading.hide()\r\n        return response\r\n    },\r\n    error => {\r\n        Loading.hide()\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport default service\r\n\r\n\r\n","import service from \"../util/service\"\r\nimport {useState, useEffect} from 'react'\r\nimport {Loading, ActivityIndicator} from 'zarm'\r\n\r\nconst ServiceDemo = () => {\r\n    let [list, setList] = useState([])\r\n    const initData = () => {\r\n        service({\r\n            url: '/ranklist',\r\n            method: 'get'\r\n        }).then(resp=>{\r\n            console.log(resp)\r\n            setList(resp.data)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        initData()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={()=>{\r\n                Loading.show({\r\n                    content: <ActivityIndicator size=\"lg\" />\r\n                });\r\n                setTimeout(() => {\r\n                    Loading.hide();\r\n                }, 3000);\r\n            }}>开启</button>\r\n            <p> Test Service </p>\r\n            <hr />\r\n            {\r\n                list.map(item => (\r\n                    <p key={item.title} className=\"list-item\"> {item.title} </p>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ServiceDemo\r\n","import {useState, useMemo} from 'react'\r\nimport {Checkbox, InputNumber} from \"antd\"\r\nimport './../style/demo.scss'\r\n\r\nconst UseMemoDemo = () => {\r\n    const [isMobile, setIsMobile] = useState(false)\r\n    const [height, setHeight] = useState(0)\r\n    const changeCheckbox = e => {\r\n        setIsMobile(e.target.checked)\r\n    }\r\n    const changeInput = val => {\r\n        setHeight(val)\r\n    }\r\n\r\n    // 把创建函数和依赖项数组作为参数传入 useMemo，它仅会在某个依赖项改变时才重新计算 memoized 值。这种优化有助于避免在每次渲染时都进行高开销的计算\r\n    const bgHeight = useMemo(() => isMobile ? height * 0.8 : height * 1.2, [isMobile, height])\r\n\r\n    return <div>\r\n        <h1>Use Memo Demo</h1>\r\n        <h2>\r\n            Data: {JSON.stringify(isMobile)} --- {JSON.stringify(height)} --- {JSON.stringify(bgHeight)}\r\n        </h2>\r\n        <h3>\r\n            Mobile: <Checkbox onChange={changeCheckbox}/><br/>\r\n            Size: <InputNumber min={0} max={500} onChange={changeInput} step={100}/>\r\n        </h3>\r\n        <div className=\"use-memo-box\" style={{height: `${bgHeight}px`}}/>\r\n    </div>\r\n}\r\n\r\nexport default UseMemoDemo\r\n","/**\r\n * 高阶组件\r\n * 总结，父组件状态改变会重渲染子组件，使用 memo 包裹子组件避免重复渲染\r\n */\r\n\r\nimport React, {useState, useMemo, memo} from \"react\";\r\nimport {Button} from \"antd\";\r\n\r\nconst MemoComponentOne = () => {\r\n    console.log(`MemoComponentOne`)\r\n    return (\r\n        <p>\r\n            MemoComponentOne\r\n        </p>\r\n    )\r\n}\r\n\r\nconst MemoComponentTwo = () => {\r\n    console.log(`MemoComponentTwo`)\r\n    return (\r\n        <p>\r\n            MemoComponentTwo\r\n        </p>\r\n    )\r\n}\r\n\r\nconst MemoComponentThree = ({count}) => {\r\n    console.log(`MemoComponentThree --- ${count}`)\r\n    return (\r\n        <p>\r\n            MemoComponentThree --- {JSON.stringify(count)}\r\n        </p>\r\n    )\r\n}\r\n\r\nconst MemoComponentFour = ({number}) => {\r\n    console.log(`MemoComponentFour --- ${number}`)\r\n    return (\r\n        <p>\r\n            MemoComponentFour --- {JSON.stringify(number)}\r\n        </p>\r\n    )\r\n}\r\n\r\n// memo的作用是当原依赖不变，子组件不会重新渲染\r\nconst MCTwo = memo(MemoComponentTwo)\r\nconst MCThree = memo(MemoComponentThree)\r\nconst MCF = memo(MemoComponentFour)\r\n\r\nconst MemoDemo = () => {\r\n    const [count, setCount] = useState(0)\r\n    const [number, setNumber] = useState({val: 0})\r\n    // 当 count 改变时，MemoComponentOne 被重新渲染，即使子组件并没有任何改变\r\n    const changeCount = () => {\r\n        setCount(count + 1)\r\n    }\r\n    const changeNumber = () => {\r\n        setNumber({\r\n            val: number.val + 2\r\n        })\r\n    }\r\n\r\n    return <div>\r\n        <h1>Memo Demo</h1>\r\n        <Button type=\"primary\" onClick={changeCount}>Change Count</Button><br/>\r\n        <Button type=\"primary\" danger onClick={changeNumber}>\r\n            Change Number\r\n        </Button>\r\n        <p> ------------------------ </p>\r\n        <MemoComponentOne/>\r\n        <p> ------------------------ </p>\r\n        <MCTwo/>\r\n        <p> ------------------------ </p>\r\n        <MemoComponentThree count={count}/>\r\n        <MCThree count={count}/>\r\n        <p> ------------------------ </p>\r\n        <MCF number={number}/>\r\n        {/*<MemoComponentFour number={useMemo(() => number, [number])}/>*/}\r\n        <br/>\r\n        <p>\r\n            COUNT: {JSON.stringify(count)}\r\n        </p>\r\n        <p>\r\n            NUMBER: {JSON.stringify(number)}\r\n        </p>\r\n    </div>\r\n}\r\n\r\nexport default MemoDemo\r\n\r\n","const initData = {\r\n    count: 0\r\n}\r\n\r\nconst setCount = initialCount => ({count: initialCount})\r\n\r\n// reducer处理的state对象必须是immutable，这意味着永远不要直接修改参数中的state对象，reducer函数应该每次都返回一个新的state object\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'add':\r\n            return {count: state.count + 1}\r\n        case 'minus':\r\n            return {count: state.count - 1}\r\n        case 'reset':\r\n            return {count: 0}\r\n        case 'set':\r\n            return setCount(action.payload)\r\n        default:\r\n            throw new Error()\r\n    }\r\n}\r\n\r\nexport {\r\n    initData,\r\n    setCount,\r\n    reducer\r\n}\r\n\r\n\r\n","import React, {useReducer} from 'react'\r\nimport {Button} from \"antd\"\r\nimport {reducer, initData} from \"../util/count\"\r\n\r\n// 可以在多个页面复用相同逻辑\r\nconst ReducerDemo = () => {\r\n\r\n    // dispatch 派遣,发送\r\n    const [state, dispatch] = useReducer(reducer, initData)\r\n\r\n    return (\r\n        <div>\r\n            <p>\r\n                <Button type=\"primary\" onClick={() => dispatch({type: 'add'})}>Add</Button>\r\n            </p>\r\n            <p>\r\n                <Button type=\"primary\" onClick={() => dispatch({type: 'minus'})}>Minus</Button>\r\n            </p>\r\n            <p>\r\n                <Button type=\"primary\" onClick={() => dispatch({type: 'reset'})}>Reset</Button>\r\n            </p>\r\n            <p>\r\n                <Button type=\"primary\" onClick={() => dispatch({type: 'set', payload: 100})}>Set</Button>\r\n            </p>\r\n            <h1>\r\n                {state.count}\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReducerDemo\r\n","import React, {useRef, useState, useEffect} from \"react\"\r\nimport {useCurrent} from \"../hook/custom-hook\"\r\nimport {Button} from \"antd\";\r\nimport \"../style/demo.scss\"\r\n\r\n// useRef 有两个作用，一是获取 dom 实例，二是获取当前值\r\n\r\nconst UseRefDemo = () => {\r\n    const [count, setCount] = useState(0)\r\n    const lastCount = useRef(count)\r\n    // 使用自定义 hook\r\n    const lastCountCopy = useCurrent(count)\r\n    useEffect(() => {\r\n        // 无论如何，输出的都是当前的 state\r\n        lastCount.current = count\r\n    })\r\n\r\n    // 当 state 改变，log 函数也是新的实例，里面的 state 实际上为旧的快照\r\n    const log = () => {\r\n        setTimeout(() => {\r\n            console.log('count --- ', count)\r\n            console.log('lastCount --- ', lastCount.current)\r\n            console.log('lastCountCopy --- ', lastCountCopy.current)\r\n        }, 3000)\r\n    }\r\n    const refBoxOne = useRef(null)\r\n    const refBoxTwo = useRef(null)\r\n    useEffect(() => {\r\n        console.log(document.querySelector('#ref-1'))\r\n        console.log(refBoxOne.current)\r\n        console.log('-----------------------------------------')\r\n        console.log(document.querySelector('#ref-2'))\r\n        console.log(refBoxTwo.current)\r\n        console.log('------------------ use ------------------')\r\n        // 应用\r\n        refBoxTwo.current.addEventListener('click', () => {\r\n            console.log('refBoxTwo')\r\n        })\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <div id=\"ref-1\" ref={refBoxOne} className=\"ref-box\">\r\n                1\r\n            </div>\r\n            <div id=\"ref-2\" ref={refBoxTwo} className=\"ref-box\">\r\n                2 --- {count}\r\n            </div>\r\n            <p>\r\n                <Button type=\"primary\" onClick={() => setCount(count + 1)}>Add Count</Button>\r\n            </p>\r\n            <p>\r\n                <Button type=\"primary\" onClick={log}>Log</Button>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseRefDemo\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {useArrays} from \"../hook/custom-hook\";\r\n\r\n\r\nconst UseArrayDemo = () => {\r\n    const [count, setCount] = useState(0)\r\n    // 解构赋值重命名避免冲突\r\n    const [list, {push: pushList, pop: popList}] = useArrays()\r\n    const [user, {push: pushUser}] = useArrays()\r\n    useEffect(() => {\r\n        pushList(1, 3, 5)\r\n        pushUser(2, 4, 6)\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <h1>\r\n                List: {JSON.stringify(list)}\r\n            </h1>\r\n            <h1>\r\n                User: {JSON.stringify(user)}\r\n            </h1>\r\n            <button onClick={() => setCount(count + 1)}>\r\n                {count}\r\n            </button>\r\n            <button onClick={popList}>\r\n                Pop List\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseArrayDemo\r\n","import React, {useState, useEffect} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst TimerDemo = () => {\r\n    const wrapperStyle = {\r\n        padding: '16px'\r\n    }\r\n    const history = useHistory()\r\n    const [timer, setTimer] = useState(0)\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setTimer(timer + 1)\r\n        }, 1000)\r\n        return () => clearInterval(interval)\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log(timer)\r\n        if (timer === 20) {\r\n            console.log('Warning')\r\n        } else if (timer === 30) {\r\n            console.log('Log Out')\r\n            history.push('/home')\r\n        }\r\n    }, [timer, history])\r\n\r\n    const operateOne = () => {\r\n        console.log('ONE')\r\n        setTimer(0)\r\n    }\r\n\r\n    const operateTwo = () => {\r\n        console.log('TWO')\r\n        setTimer(0)\r\n    }\r\n\r\n    const operateThree = () => {\r\n        console.log('THREE')\r\n        setTimer(0)\r\n    }\r\n\r\n    const operateFive = () => {\r\n        console.log('FIVE')\r\n        setTimer(0)\r\n    }\r\n\r\n    const operateFour = () => {\r\n        console.log('FOUR')\r\n        setTimer(0)\r\n    }\r\n\r\n    return (\r\n        <div style={wrapperStyle}>\r\n            {timer}\r\n            <hr/>\r\n\r\n            <button onClick={operateOne}>Operate One</button>\r\n            <button onClick={operateTwo}>Operate Two</button>\r\n            <button onClick={operateThree}>Operate Three</button>\r\n            <button onClick={operateFour}>Operate Four</button>\r\n            <button onClick={operateFive}>Operate Five</button>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimerDemo\r\n","import React, {useState, useEffect} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport TimerDemo from \"./timer-demo\"\r\n\r\n// 问清楚复制新链接是否重计时\r\nconst ParentChildDemo = () => {\r\n    const [totalTimer, setTotalTimer] = useState(0)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setTotalTimer(totalTimer + 1)\r\n        }, 1000)\r\n        return () => clearInterval(interval)\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log('parent: ', totalTimer)\r\n        if (totalTimer === 50) {\r\n            console.log('Parent Warning')\r\n        } else if (totalTimer === 60) {\r\n            console.log('Parent Log Out')\r\n            history.push('/home')\r\n        }\r\n    }, [totalTimer, history])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Parent And Child</h1>\r\n            <TimerDemo/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ParentChildDemo\r\n","import React, {useState} from \"react\"\r\nimport {useDispatch, useStore, connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport './../style/demo.scss'\r\n\r\nconst ReduxUseOne = () => {\r\n    const [flag, setFlag] = useState(0)\r\n    const dispatch = useDispatch()\r\n    const store = useStore()\r\n    const {counter, toDoList} = store.getState()\r\n    const addTask = () => {\r\n        setFlag(flag + 1)\r\n        dispatch({\r\n            type: 'add',\r\n            task: `task${flag}`\r\n        })\r\n    }\r\n    const deleteToDoItem = idx => {\r\n        dispatch({\r\n            type: 'delete',\r\n            idx\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 style={{\r\n                color: '#0f0'\r\n            }}> redux-counter-one </h1>\r\n            count: {counter}\r\n            <br/>\r\n            <h2> toDoList</h2>\r\n            {\r\n                toDoList.map((item, idx) => (\r\n                    <div className=\"to-do-btn\" onClick={() => deleteToDoItem(idx)} key={item.task}>\r\n                        {item.task}\r\n                    </div>\r\n                ))\r\n            }\r\n            <hr/>\r\n            <button onClick={() => dispatch({type: 'increment'})}>increment</button>\r\n            <button onClick={() => dispatch({type: 'decrement'})}>decrement</button>\r\n            <button onClick={addTask}>\r\n                Add\r\n            </button>\r\n            <br/>\r\n            <Link to=\"/redux-use-two\">跳转到 redux-use-two </Link>\r\n            <span style={{\r\n                padding: '0 10px'\r\n            }}>|</span>\r\n            <Link to=\"/home\">To Home</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    counter: state.counter,\r\n    toDoList: state.toDoList\r\n})\r\n\r\nexport default connect(mapStateToProps)(ReduxUseOne)\r\n","import React from \"react\"\r\nimport {useDispatch, useStore, connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ReduxUseTwo = () => {\r\n    const dispatch = useDispatch()\r\n    const store = useStore()\r\n\r\n    return (\r\n        <div>\r\n            <h1 style={{\r\n                color: '#f00'\r\n            }}> redux-counter-two </h1>\r\n            count: {store.getState().counter}\r\n            <br />\r\n            toDoList: {JSON.stringify(store.getState().toDoList)}\r\n            <hr/>\r\n            <button onClick={() => dispatch({type: 'increment'})}>increment</button>\r\n            <button onClick={() => dispatch({type: 'decrement'})}>decrement</button>\r\n            <br/>\r\n            <Link to=\"/redux-use-one\">跳转到 redux-use-one </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(state => ({\r\n    counter: state.counter\r\n}))(ReduxUseTwo)\r\n","import React from \"react\"\r\n\r\nconst FWChild = ({num, logFn, logInput, val}) => {\r\n    return <div>\r\n        <div>----------------------------------------</div>\r\n        <h2>FW CHILD - {num}</h2>\r\n        val: {val}\r\n        <br/>\r\n        <button onClick={logFn}>Log</button>\r\n        <br/>\r\n        <input onInput={logInput}/>\r\n    </div>\r\n}\r\n\r\nexport default FWChild\r\n","import {useState} from \"react\"\r\n\r\nconst useVal = () => {\r\n    const [val, setVal] = useState(0)\r\n    const addVal = () => {\r\n        setVal(val + 1)\r\n    }\r\n    return [val, addVal]\r\n}\r\nconst logTable = () => {\r\n    console.table({\r\n        a: 3,\r\n        b: 4,\r\n        c: 5\r\n    })\r\n}\r\nconst logInput = event => {\r\n    console.log(event.target.value)\r\n}\r\n\r\nexport {\r\n    useVal,\r\n    logTable,\r\n    logInput\r\n}\r\n","import React, {useState} from \"react\"\r\nimport FWChild from \"./fw-child\"\r\nimport {useVal, logInput, logTable} from './model'\r\n\r\n// 子组件仅作展示，父组件提供数据\r\n// 如果子组件多处用到，不能写太多代码，定义 model 层\r\nconst FWParent = () => {\r\n    // const [val, setVal] = useState(0)\r\n    // const addVal = () => {\r\n    //     setVal(val + 1)\r\n    // }\r\n    // const logTable = () => {\r\n    //     console.table({\r\n    //         a: 3,\r\n    //         b: 4,\r\n    //         c: 5\r\n    //     })\r\n    // }\r\n    // const logInput = event => {\r\n    //     console.log(event.target.value)\r\n    // }\r\n\r\n\r\n    // model 使用示例\r\n    const [val, addVal] = useVal()\r\n    return <div>\r\n        <h2>FW PARENT</h2>\r\n        <button onClick={addVal}>Set Val</button>\r\n        <FWChild num={33} val={val} logFn={logTable} logInput={logInput}  />\r\n    </div>\r\n}\r\n\r\nexport default FWParent\r\n","const CookiesDemo = () => {\r\n    return <div>\r\n        <h1>Cookies</h1>\r\n    </div>\r\n}\r\n\r\nexport default CookiesDemo\r\n","import {useState, useEffect} from 'react'\r\nimport styles from './VerificationCodeInput.module.scss'\r\n\r\nconst VerificationCodeInput = ({setVerificationCode}) => {\r\n    const [bind, setBind] = useState(false)\r\n    const [codeList, setCodeList] = useState(['', '', '', '', '', ''])\r\n\r\n    useEffect(() => {\r\n        // 参考 https://codepen.io/tatthien/pen/LYZxEmv\r\n        const form = document.querySelector('#verification-form')\r\n        const inputs = document.querySelectorAll('input')\r\n\r\n        const handleInput = (event) => {\r\n            const currentInput = event.target\r\n            const nextInput = currentInput.nextElementSibling\r\n            if (nextInput && currentInput.value) {\r\n                nextInput.focus()\r\n                nextInput.value && nextInput.select()\r\n            }\r\n        }\r\n\r\n        const handleBackspace = (event) => {\r\n            const currentInput = event.target\r\n            if (currentInput.value) {\r\n                // currentInput.value = ''\r\n            } else {\r\n                const previousInput = currentInput.previousElementSibling\r\n                previousInput && previousInput.focus()\r\n            }\r\n        }\r\n\r\n        const handleArrowLeft = (event) => {\r\n            const previousInput = event.target.previousElementSibling\r\n            previousInput && previousInput.focus()\r\n        }\r\n\r\n        const handleArrowRight = (event) => {\r\n            const nextInput = event.target.nextElementSibling\r\n            nextInput && nextInput.focus()\r\n        }\r\n\r\n        if (form) {\r\n            form.addEventListener('input', handleInput)\r\n        }\r\n\r\n\r\n        inputs.forEach(input => {\r\n            input.addEventListener('focus', (event) => {\r\n                setTimeout(() => {\r\n                    event.target.select()\r\n                }, 0)\r\n            })\r\n\r\n            input.addEventListener('keydown', (event) => {\r\n                // keyCode 已被废弃，此处做兼容处理\r\n                if (event.key) {\r\n                    switch (event.key) {\r\n                        case 'Backspace':\r\n                            handleBackspace(event)\r\n                            return\r\n                        case 'ArrowLeft':\r\n                            handleArrowLeft(event)\r\n                            return\r\n                        case 'ArrowRight':\r\n                            handleArrowRight(event)\r\n                            return\r\n                    }\r\n                } else if (event.keyCode) {\r\n                    switch (event.keyCode) {\r\n                        case 8:\r\n                            handleBackspace(event)\r\n                            return\r\n                        case 37:\r\n                            handleArrowLeft(event)\r\n                            return\r\n                        case 38:\r\n                            handleArrowRight(event)\r\n                            return\r\n                    }\r\n                }\r\n            })\r\n\r\n        })\r\n\r\n        setBind(true)\r\n\r\n    }, [])\r\n\r\n    const handleChange = (event, index) => {\r\n        codeList[index] = event.target.value\r\n        setCodeList([...codeList])\r\n    }\r\n\r\n    useEffect(() => {\r\n        setVerificationCode(codeList.join(''))\r\n    }, [codeList, setVerificationCode])\r\n\r\n    return <div id=\"verification-form\" style={{\r\n        display: !bind && 'none'\r\n    }}>\r\n        <input maxLength={1} pattern=\"[0-9]\" className={styles.verificationCodeInput}\r\n               onChange={event => handleChange(event, 0)}/>\r\n        <input maxLength={1} pattern=\"[0-9]\" className={styles.verificationCodeInput}\r\n               onChange={event => handleChange(event, 1)}/>\r\n        <input maxLength={1} pattern=\"[0-9]\" className={styles.verificationCodeInput}\r\n               onChange={event => handleChange(event, 2)}/>\r\n        <input maxLength={1} pattern=\"[0-9]\" className={styles.verificationCodeInput}\r\n               onChange={event => handleChange(event, 3)}/>\r\n        <input maxLength={1} pattern=\"[0-9]\" className={styles.verificationCodeInput}\r\n               onChange={event => handleChange(event, 4)}/>\r\n        <input maxLength={1} pattern=\"[0-9]\" className={styles.verificationCodeInput}\r\n               onChange={event => handleChange(event, 5)}/>\r\n    </div>\r\n}\r\n\r\nexport default VerificationCodeInput\r\n","import React from \"react\";\r\n\r\nconst Count = ({count, setCount}) => {\r\n    return <div>\r\n        {count} ---\r\n        <button onClick={() => {\r\n            setCount(count + 1)\r\n        }}>\r\n            Add\r\n        </button>\r\n    </div>\r\n}\r\n\r\nexport default Count\r\n","import React,{useState} from \"react\";\r\nimport VerificationCodeInput from \"../components/verificationCodeInput\";\r\nimport Count from \"../components/count\";\r\nconst InputUse = () => {\r\n    const [count, setCount] = useState(0)\r\n    const [verificationCode, setVerificationCode] = useState([])\r\n    return <div>\r\n        <VerificationCodeInput verificationCode={verificationCode} setVerificationCode={setVerificationCode} />\r\n        <Count count={count} setCount={setCount} />\r\n        <br />\r\n        parent: {count}\r\n        <br />\r\n        verificationCode: {verificationCode}\r\n    </div>\r\n}\r\n\r\nexport default InputUse\r\n","import React from \"react\";\r\n\r\nconst ADialog = () => {\r\n    return <div style={{\r\n        width: '200px',\r\n        height: '700px'\r\n    }}>\r\n        <h1>\r\n            ADialog\r\n        </h1>\r\n    </div>\r\n}\r\n\r\nexport default ADialog\r\n","import React from \"react\";\r\n\r\nconst BDialog = () => {\r\n    return <h1>\r\n        BDialog\r\n    </h1>\r\n}\r\n\r\nexport default BDialog\r\n","import styles from './Dialog.module.scss'\r\nimport React, {useState, useEffect} from 'react'\r\nimport {createPortal} from 'react-dom'\r\n\r\nimport ADialog from \"./aDialog\"\r\nimport BDialog from \"./bDialog\"\r\n\r\n// const match = {\r\n//     A: () => ADialog,\r\n//     B: () => BDialog\r\n// }\r\n\r\nconst match = {\r\n    A: <ADialog />,\r\n    B: <BDialog />\r\n}\r\n\r\n// Dialog 必须以 spa 的方式引入\r\nconst Dialog = ({displayDialog, setDisplayDialog, type}) => {\r\n\r\n    // const [displayDialog, setDisplayDialog] = useState(true)\r\n\r\n    // const close = () => {\r\n    //     console.log(typeof setDisplayDialog)\r\n    //     setDisplayDialog(false)\r\n    // }\r\n    //\r\n    // const node = document.createElement('section')\r\n    // document.body.insertBefore(node, document.querySelector('#root'))\r\n    //\r\n    // useEffect(() => {\r\n    //     return () => {\r\n    //         document.body.removeChild(node)\r\n    //     }\r\n    // }, [node])\r\n\r\n    console.log(type, match[type])\r\n    return createPortal(\r\n        <section>\r\n            {\r\n                displayDialog\r\n                &&\r\n                <>\r\n                    <div className={styles.overlay}>\r\n                        <div className={styles.wrapper}>\r\n                            {\r\n                                match[type]\r\n                            }\r\n                            {/*<ADialog />*/}\r\n                            {/*{*/}\r\n                            {/*    match[type]()*/}\r\n                            {/*}*/}\r\n                            {/*{*/}\r\n                            {/*    type ? match[type]() : {children}*/}\r\n                            {/*}*/}\r\n                            {/*{children}*/}\r\n\r\n                            {/*<button onClick={close}>*/}\r\n                            {/*    Close*/}\r\n                            {/*</button>*/}\r\n\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n        </section>\r\n        ,\r\n        document.body\r\n    )\r\n\r\n\r\n    // return <div className={styles.wrapper}>\r\n\r\n    // </div>\r\n}\r\n\r\nexport default Dialog\r\n","import Dialog from \"../components/dialog\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst DialogUse = () => {\r\n\r\n    const [displayDialog, setDisplayDialog] = useState(false)\r\n\r\n    const open = () => {\r\n        setDisplayDialog(true)\r\n    }\r\n\r\n    const close = () => {\r\n        setDisplayDialog(false)\r\n    }\r\n\r\n    return <div>\r\n\r\n        <button onClick={open}>open</button>\r\n\r\n        <div style={{\r\n            width: '300px',\r\n            height: '2000px',\r\n            backgroundColor: '#c17582'\r\n        }} />\r\n\r\n        <Dialog displayDialog={displayDialog} setDisplayDialog={setDisplayDialog} type='B' />\r\n\r\n        {/*<Dialog displayDialog={displayDialog} setDisplayDialog={setDisplayDialog} type='A'>*/}\r\n        {/*    <div style={{*/}\r\n        {/*        width: '300px',*/}\r\n        {/*        height: '300px'*/}\r\n        {/*    }}>*/}\r\n        {/*        <button onClick={close} style={{marginLeft: '60px'}}>*/}\r\n        {/*            Close*/}\r\n        {/*        </button>*/}\r\n        {/*    </div>*/}\r\n        {/*</Dialog>*/}\r\n\r\n    </div>\r\n}\r\n\r\nexport default DialogUse\r\n","/**\r\n * 测试状态共享\r\n */\r\nimport React, {useState} from 'react'\r\n\r\nconst ShareState = () => {\r\n\r\n    const [count, setCount] = useState(0)\r\n\r\n    // React 组件必须为 Function 或 Class\r\n    // const Child1 = <div />\r\n\r\n    // class Child1 extends React.Component {\r\n    //     render() {\r\n    //         return <div>\r\n    //             Child1\r\n    //         </div>\r\n    //     }\r\n    // }\r\n\r\n    // 当一个状态来自外部时候，其每一次改变都会引起组件的全部更新\r\n    const Child1 = () => <div>\r\n        Child1---{count}---\r\n        <button onClick={() => {\r\n            setCount(count + 1)\r\n        }}>\r\n            set count\r\n        </button>\r\n    </div>\r\n\r\n    const Child2 = () => {\r\n\r\n        const [inlineCount, setInlineCount] = useState(0)\r\n\r\n        return <div>\r\n            Child2---{count}---\r\n            <button onClick={() => {\r\n                setCount(count - 1)\r\n            }}>\r\n                set count\r\n            </button>\r\n            <div>----------------------------------------------</div>\r\n            <p>\r\n                InlineCount: {inlineCount}\r\n            </p>\r\n            <button onClick={() => {\r\n                setInlineCount(inlineCount + 5)\r\n            }}>\r\n                Set Inline Count\r\n            </button>\r\n        </div>\r\n    }\r\n\r\n    const Child3 = ({count}) => <div>\r\n        <div style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            width: '200px',\r\n            height: '200px',\r\n            backgroundColor: '#f00'\r\n        }}>\r\n            {count}\r\n        </div>\r\n        <div style={{\r\n            width: '200px',\r\n            height: '100px',\r\n            backgroundColor: '#0f0'\r\n        }}>\r\n            irrelevant\r\n        </div>\r\n    </div>\r\n\r\n    return <div>\r\n        <h1> Share State </h1>\r\n        <Child1/>\r\n        <Child2/>\r\n        <Child3 count={count}/>\r\n        <button onClick={() => {\r\n            setCount(count + 1)\r\n        }}>\r\n            set parent count\r\n        </button>\r\n        <div style={{\r\n            width: '200px',\r\n            height: '100px',\r\n            backgroundColor: '#0f0'\r\n        }}>\r\n            parent irrelevant\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ShareState\r\n","import React from \"react\"\r\n\r\n// 设计参数仅需要做一个转接\r\nconst Input = ({value, onChange}) => {\r\n    return <input\r\n        style={{\r\n            width: '200px',\r\n            height: '30px',\r\n            border: '1px solid #f00'\r\n        }}\r\n        defaultValue={value}\r\n        onChange={onChange}/>\r\n}\r\n\r\nexport default Input\r\n","import React from \"react\";\r\nimport Input from \"./input\";\r\n\r\nconst UseInput = () => {\r\n    const [val, setVal] = React.useState('init')\r\n\r\n\r\n    return <div>\r\n        <Input value={val} onChange={event => {\r\n            setVal(event.target.value)\r\n        }} />---{val}\r\n    </div>\r\n}\r\n\r\nexport default UseInput\r\n","import React, {useState} from \"react\"\r\n\r\nconst Random = ({style, value}) => {\r\n    const rand1 = Math.ceil(Math.random() * 10)\r\n    const [rand2] = useState(Math.ceil(Math.random() * 10))\r\n    console.log(style)\r\n    return <div style={{\r\n        ...style,\r\n        width: '100px',\r\n        height: '100px',\r\n        backgroundColor: '#00f',\r\n        color: '#fff',\r\n    }}>\r\n        {value}---{rand1}---{rand2}\r\n    </div>\r\n}\r\n\r\nconst ThreeInput = () => {\r\n\r\n    const [val1, setVal1] = useState('')\r\n    const [val2, setVal2] = useState('')\r\n    const [val3, setVal3] = useState('')\r\n    const [focusFlags, setFocusFlags] = useState([false, false, false])\r\n\r\n    const focus = (index) => {\r\n        for (let i = 0; i < focusFlags.length; i++) {\r\n            focusFlags[i] = false\r\n        }\r\n        focusFlags[index] = true\r\n        setFocusFlags([...focusFlags])\r\n    }\r\n\r\n    const inputFns = {\r\n        focus(index) {\r\n            for (let i = 0; i < focusFlags.length; i++) {\r\n                focusFlags[i] = false\r\n            }\r\n            focusFlags[index] = true\r\n            setFocusFlags([...focusFlags])\r\n        },\r\n        blur(index) {\r\n            focusFlags[index] = false\r\n            setFocusFlags([...focusFlags])\r\n        },\r\n        click(index) {\r\n            this.blur = null\r\n        }\r\n    }\r\n\r\n    let blur = (index) => {\r\n        console.log('blur')\r\n        focusFlags[index] = false\r\n        setFocusFlags([...focusFlags])\r\n\r\n    }\r\n\r\n    const click = (index) => {\r\n        console.log('click')\r\n        blur = () => {\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <Random style={{}} value={'a'}></Random>\r\n        <p>-------------- input0 --------------</p>\r\n        <input onFocus={() => focus(0)} onBlur={() => {\r\n            setTimeout(() => {\r\n                blur(0)\r\n            }, 300)\r\n        }}/>\r\n        <button onClick={() => click(0)}>click input0</button>\r\n        {\r\n            focusFlags[0] === true\r\n            &&\r\n            <Random/>\r\n        }\r\n\r\n        <p>-------------- input1 --------------</p>\r\n        <input onFocus={() => focus(1)} onBlur={() => {\r\n            setTimeout(() => {\r\n                blur(1)\r\n            }, 300)\r\n        }}/>\r\n        <button onClick={() => click(1)}>click input1</button>\r\n        {\r\n            // focusFlags[1] === true\r\n            // &&\r\n            // style 也是一个外部状态\r\n            <Random style={{\r\n                display: focusFlags[1] === true ? '' : 'none'\r\n            }} />\r\n        }\r\n\r\n        <p>-------------- input2 --------------</p>\r\n        <input onFocus={() => focus(2)} onBlur={() => {\r\n            setTimeout(() => {\r\n                blur(2)\r\n            }, 300)\r\n        }}/>\r\n        <button onClick={() => click(2)}>click input2</button>\r\n        {\r\n            focusFlags[2] === true\r\n            &&\r\n            <Random/>\r\n        }\r\n\r\n        <p>\r\n            {JSON.stringify(focusFlags)}\r\n        </p>\r\n    </div>\r\n}\r\n\r\nexport default ThreeInput\r\n","class StuService {\r\n    constructor() {\r\n        this._name = ''\r\n        this._age = -1\r\n    }\r\n\r\n    setName(name) {\r\n        this._name = name\r\n    }\r\n\r\n    getName() {\r\n        return this._name\r\n    }\r\n\r\n    setAge(age) {\r\n        this._age = age\r\n    }\r\n\r\n    getAge(age) {\r\n        return this._age\r\n    }\r\n\r\n}\r\n\r\nexport default StuService\r\n","import {useState} from 'react'\r\nconst useService = () => {\r\n    const [name, setName] = useState()\r\n    const changeName = (_name) => {\r\n        setName(_name)\r\n    }\r\n    return {\r\n        name,\r\n        setName,\r\n        changeName\r\n    }\r\n}\r\n\r\nexport default useService\r\n","import StuService from './stuService'\r\nimport React from \"react\";\r\nimport useService from \"./useService\";\r\n\r\nconst Stu1 = () => {\r\n    const ss = new StuService()\r\n    ss.setName('name')\r\n    const change = () => {\r\n        ss.setName('neo')\r\n    }\r\n\r\n    const {\r\n        name,\r\n        changeName\r\n    } = useService()\r\n\r\n    return <div>\r\n        STU1-{ss.getName()}-<button onClick={change}>click</button>\r\n        -----{name}---\r\n        <button onClick={() => {\r\n            changeName('abc')\r\n        }}>change name\r\n        </button>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Stu1\r\n","import StuService from './stuService'\r\nimport React from \"react\";\r\nimport useService from \"./useService\";\r\n\r\nconst Stu2 = () => {\r\n\r\n    const ss = new StuService()\r\n\r\n    const {name, changeName} = useService()\r\n\r\n    return <div>\r\n        STU2\r\n        <h1>{ss.getName()}</h1>\r\n        -----{name}---\r\n        <button onClick={() => {\r\n            changeName('neo')\r\n        }}>change name\r\n        </button>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Stu2\r\n","import Stu1 from \"./stu1\";\r\nimport Stu2 from \"./stu2\";\r\nimport React from \"react\";\r\n\r\nconst Stu = () => {\r\n    return <div>\r\n        <Stu1 />\r\n        <hr />\r\n        <Stu2 />\r\n    </div>\r\n}\r\n\r\nexport default Stu\r\n","import React, {memo, useState} from 'react'\r\n\r\n// memo 为高阶组件\r\nconst Memo = memo(({name}) => {\r\n    const [count, setCount] = useState(0)\r\n    console.log('Memo')\r\n    return <div>\r\n        <h1> Name: {name} </h1>\r\n        {/*<h1> Age: {age} </h1>*/}\r\n        <h1> Count: {count} </h1>\r\n        <button onClick={() => {\r\n            setCount(count + 1)\r\n        }}> set count\r\n        </button>\r\n    </div>\r\n})\r\n\r\nexport default Memo\r\n","import React, {useState} from 'react'\r\n\r\nconst NotMeme = ({name}) => {\r\n    const [count, setCount] = useState(0)\r\n    console.log('NotMemo')\r\n    return <div>\r\n        <h1> Name: {name} </h1>\r\n        {/*<h1> Age: {age} </h1>*/}\r\n        <h1> Count: {count} </h1>\r\n        <button onClick={() => {\r\n            setCount(count + 1)\r\n        }}> set count\r\n        </button>\r\n    </div>\r\n}\r\n\r\nexport default NotMeme\r\n","import Memo from \"./memo\";\r\nimport NotMeme from \"./notMemo\";\r\nimport React from \"react\";\r\n\r\n// memo 的作用是检查 props 传参有没有更改，如果 props 的参数没有改变，不会重新渲染\r\n// 没有包裹的话就会导致即使传参不变，但 props 改变了，也会重复渲染\r\nconst UseReactMemoDemo = () => {\r\n\r\n    const [info, setInfo] = React.useState({\r\n        name: 'neo',\r\n        age: 25\r\n    })\r\n\r\n    const change = () => {\r\n        info.age = Math.ceil(Math.random() * 25)\r\n        setInfo({\r\n            ...info\r\n        })\r\n    }\r\n\r\n    return <div>\r\n        <button onClick={change}> change </button>\r\n        <Memo name={info.name} />\r\n        <hr/>\r\n        <NotMeme name={info.name} />\r\n    </div>\r\n}\r\n\r\nexport default UseReactMemoDemo\r\n","import React from \"react\";\r\nimport ReactECharts from 'echarts-for-react';\r\n\r\nconst EChartsDemo = () => {\r\n    return <div style={{\r\n        width: '400px',\r\n        height: '400px',\r\n        border: '1px solid #000'\r\n    }}>\r\n        <ReactECharts option={{\r\n            tooltip: {\r\n                trigger: 'item'\r\n            },\r\n            legend: {\r\n                top: '15%',\r\n                orient: 'vertical',\r\n                x: 'right',\r\n                y: 'center'\r\n            },\r\n            series: [\r\n                {\r\n                    // name: '访问来源',\r\n                    type: 'pie',\r\n                    radius: ['40%', '70%'],\r\n                    center: ['35%', '50%'],\r\n                    avoidLabelOverlap: false,\r\n                    label: {\r\n                        show: false,\r\n                        position: 'center'\r\n                    },\r\n                    emphasis: {\r\n                        label: {\r\n                            show: true,\r\n                            fontSize: '40',\r\n                            fontWeight: 'bold'\r\n                        }\r\n                    },\r\n                    labelLine: {\r\n                        show: false\r\n                    },\r\n                    color: ['#af873d', '#2b2b2b', '#9775a7', '#6a8759', '#b17731'],\r\n                    data: [\r\n                        {value: 1048, name: '搜索引擎'},\r\n                        {value: 735, name: '直接访问'},\r\n                        {value: 580, name: '邮件营销'},\r\n                        {value: 484, name: '联盟广告'},\r\n                        {value: 300, name: '视频广告'}\r\n                    ]\r\n                }\r\n            ]\r\n        }}/>\r\n    </div>\r\n}\r\n\r\nexport default EChartsDemo\r\n","import {useEffect, useRef} from 'react'\r\nimport React from \"react\";\r\n\r\nconst ShrinkDemo = () => {\r\n\r\n    const navEl = useRef(null)\r\n    const logoEl = useRef(null)\r\n    const handleScroll = () => {\r\n        if (document.body.scrollTop > 65 || document.documentElement.scrollTop > 65) {\r\n            navEl.current.style.padding = '30px 10px'\r\n            logoEl.current.style.fontSize = '25px'\r\n        } else {\r\n            navEl.current.style.padding = '80px 20px'\r\n            logoEl.current.style.fontSize = '35px'\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll)\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll)\r\n        }\r\n    }, [])\r\n\r\n    return <>\r\n        <nav ref={navEl}\r\n             style={{\r\n                 position: 'fixed',\r\n                 top: 0,\r\n                 marginBottom: '20px',\r\n                 padding: '80px 20px',\r\n                 width: '100%',\r\n                 backgroundColor: '#f1f1f1',\r\n                 transition: 'all .5s'\r\n             }}>\r\n            <span ref={logoEl}\r\n                  style={{\r\n                      fontSize: '35px'\r\n                  }}>\r\n                CompanyLogo\r\n            </span>\r\n        </nav>\r\n\r\n        <main style={{\r\n            marginTop: '220px',\r\n            width: '100%',\r\n            height: '1100px'\r\n        }}>\r\n            <div style={{\r\n                padding: '24px',\r\n                fontSize: '38px',\r\n                fontWeight: 'bold'\r\n            }}>\r\n                headline\r\n            </div>\r\n        </main>\r\n    </>\r\n}\r\nexport default ShrinkDemo\r\n","import React from \"react\"\r\nimport axios from \"axios\";\r\n\r\nconst HeroesDemo = () => {\r\n\r\n    const fetchHeroesApi = () => axios.get('/api')\r\n\r\n    const fetchHeroesOne = () => {\r\n        console.log(process.env.REACT_APP_API_URL)\r\n        fetchHeroesApi().then(res => {\r\n            console.log('result', res)\r\n        })\r\n        axios.get('/api/heroes').then(res => {\r\n            console.log('heroes result', res)\r\n        })\r\n    }\r\n\r\n    return <div>\r\n        <h1>Heroes</h1>\r\n        <button onClick={fetchHeroesOne}>\r\n            Fetch Heroes One\r\n        </button>\r\n    </div>\r\n}\r\n\r\nexport default HeroesDemo\r\n","import App from \"../App\"\r\nimport Clock from \"../view/clock\"\r\nimport List from \"../view/list\"\r\nimport NavBar from \"../view/navbar\"\r\nimport StateImprove from \"../view/improve\"\r\nimport Example from \"../hook/effect\"\r\nimport DynamicEffect from \"../hook/dynamic-effect\"\r\nimport TrapEffect from \"../hook/trap-effect\"\r\nimport CustomUse from \"../hook/use-custom-hook\"\r\nimport AntdDemo from \"../antd/antd-demo\"\r\nimport MobxDemo from \"../mobx/mobx-demo\"\r\nimport SettingBox from \"../senior/context\"\r\nimport ObserverDemo from \"../mobx/observer-demo\"\r\nimport MobxEffect from \"../mobx/mobx-effect\"\r\nimport RefDemo from \"../hook/ref-demo\"\r\nimport CommunicationOne from \"../communication/communication-one\"\r\nimport CommunicationTwo from \"../communication/communication-two\"\r\nimport CommunicationCompose from \"../communication/communication-compose\"\r\nimport SassDemo from \"../sass/sass-demo\"\r\nimport NotFound from \"../view/not-found\"\r\nimport ServiceDemo from \"../hook/service-demo\"\r\nimport UseMemoDemo from \"../senior/use-memo-demo\"\r\nimport MemoDemo from \"../HOC/memo-demo\"\r\nimport ReducerDemo from \"../senior/reducer-demo\"\r\nimport UseRefDemo from \"../senior/use-ref-demo\"\r\nimport UseArrayDemo from \"../senior/use-array-demo\"\r\nimport TimerDemo from \"../bank/timer-demo\"\r\nimport ParentChildDemo from \"../bank/parent-child-demo\"\r\nimport ReduxUseOne from \"../redux/redux-use-one\"\r\nimport ReduxUseTwo from \"../redux/redux-use-two\"\r\nimport FWChild from \"../framework/fw-child\"\r\nimport FWParent from \"../framework/fw-parent\"\r\nimport CookiesDemo from \"../cookies/cookies-demo\"\r\nimport InputUse from \"../components_use/input-use\"\r\nimport DialogUse from \"../components_use/dialog-use\"\r\nimport ShareState from \"../shareState/shareState\"\r\nimport UseInput from \"../components/useInput\"\r\nimport ThreeInput from \"../components_use/three-input\"\r\nimport Stu from \"../DI/stu\"\r\nimport UseReactMemoDemo from \"../memo/useReactMemoDemo\"\r\nimport EChartsDemo from \"../echarts/echartsDemo\"\r\nimport ShrinkDemo from \"../shrink/shrinkDemo\"\r\nimport HeroesDemo from \"../heroes/heroes-demo\";\r\nimport {BrowserRouter, Switch, Route, Redirect} from 'react-router-dom'\r\n\r\n\r\nconst PageRouter = () => (\r\n    <BrowserRouter>\r\n        {/*react-router-dom 提供了两个路由匹配组件：Switch 和 Route。当<Switch>被渲染，它会搜索其 children <Route>内容找到一个其 path 当前的 URL 匹配*/}\r\n        <Switch>\r\n\r\n            {/*仅<Route path>代表从路由的开头开始匹配，而不是匹配整个url。所以<Route path=\"/\">会始终匹配所有的url*/}\r\n            {/*我们通常将其放置在<Switch>最后一个。另一种可能的解决方案是使用<Route exact path=\"/\">*/}\r\n            {/*exact 精确的*/}\r\n\r\n            {/*exact同样适用于重定向*/}\r\n            <Redirect exact from=\"/\" to=\"/home\"/>\r\n            <Route path=\"/home\">\r\n                <App/>\r\n            </Route>\r\n            {/*上面写法等同于render*/}\r\n            {/*存在component的写法，但props的数据更新时component会创建新组件，将导致现有组件的卸载和新组件的挂载，而不是更新现有组件，因此优先使用render*/}\r\n            <Route path=\"/clock\" render={() => <Clock/>}/>\r\n            <Route path=\"/list\" render={() => <List/>}/>\r\n            <Route path=\"/detail\" render={() => <NavBar/>}/>\r\n            <Route path=\"/improve\" render={() => <StateImprove/>}/>\r\n            <Route path=\"/effect\" render={() => <Example/>}/>\r\n            <Route path=\"/dynamic-effect\" render={() => <DynamicEffect/>}/>\r\n            <Route path=\"/trap-effect\" render={() => <TrapEffect/>}/>\r\n            <Route path=\"/setting-box\" render={() => <SettingBox/>}/>\r\n            <Route path=\"/custom-use\" render={() => <CustomUse/>}/>\r\n            <Route path=\"/ref-demo\" render={() => <RefDemo/>}/>\r\n            <Route path=\"/service-demo\" render={() => <ServiceDemo/>}/>\r\n            {/*antd ui 框架*/}\r\n            <Route path=\"/antd-demo\" render={() => <AntdDemo/>}/>\r\n            {/*mobx*/}\r\n            <Route path=\"/mobx-demo\" render={() => <MobxDemo/>}/>\r\n            <Route path=\"/observer-demo\" render={() => <ObserverDemo/>}/>\r\n            <Route path=\"/mobx-effect\" render={() => <MobxEffect/>}/>\r\n            {/*测试组件间通信*/}\r\n            <Route path=\"/communication-one\" render={() => <CommunicationOne/>}/>\r\n            <Route path=\"/communication-two\" render={() => <CommunicationTwo/>}/>\r\n            <Route path=\"/communication-compose\" render={() => <CommunicationCompose/>}/>\r\n            <Route path=\"/sass-demo\" render={() => <SassDemo/>}/>\r\n            <Route path=\"/use-memo-demo\" render={() => <UseMemoDemo/>}/>\r\n            <Route path=\"/memo-demo\" render={() => <MemoDemo/>}/>\r\n            <Route path=\"/reducer-demo\" render={() => <ReducerDemo/>}/>\r\n            <Route path=\"/use-ref-demo\" render={() => <UseRefDemo/>}/>\r\n            <Route path=\"/use-array-demo\" render={() => <UseArrayDemo/>}/>\r\n            {/*银行 demo*/}\r\n            <Route path=\"/timer-demo\" render={() => <TimerDemo/>}/>\r\n            <Route path=\"/parent-child-demo\" render={() => <ParentChildDemo/>}/>\r\n            {/*redux demo*/}\r\n            <Route path=\"/redux-use-one\" render={() => <ReduxUseOne/>}/>\r\n            <Route path=\"/redux-use-Two\" render={() => <ReduxUseTwo/>}/>\r\n            <Route path=\"/fw-child\" render={() => <FWChild/>}/>\r\n            <Route path=\"/fw-parent\" render={() => <FWParent/>}/>\r\n            <Route path=\"/cookies-demo\" render={() => <CookiesDemo/>}/>\r\n            <Route path=\"/input-use\" render={() => <InputUse/>}/>\r\n            <Route path=\"/dialog-use\" render={() => <DialogUse/>}/>\r\n            <Route path=\"/share-state\" render={() => <ShareState/>}/>\r\n            <Route path=\"/use-input\" render={() => <UseInput/>}/>\r\n            <Route path=\"/three-input\" render={() => <ThreeInput/>}/>\r\n            <Route path=\"/stu\" render={() => <Stu/>}/>\r\n            <Route path=\"/use-react-memo-demo\" render={() => <UseReactMemoDemo/>}/>\r\n            <Route path=\"/echarts-demo\" render={() => <EChartsDemo/>}/>\r\n            <Route path=\"/shrink-demo\" render={() => <ShrinkDemo/>}/>\r\n            <Route path=\"/heroes-demo\" render={() => <HeroesDemo />} />\r\n            {/*配置404*/}\r\n            <Route path=\"*\" render={() => <NotFound/>}/>\r\n        </Switch>\r\n\r\n    </BrowserRouter>\r\n)\r\n\r\nexport default PageRouter\r\n","import {observable, action} from 'mobx'\r\n\r\nconst AppStore = observable({\r\n    useLibraries: ['react', 'react-router-dom', 'mobx-react'],\r\n    addLibrary(library) {\r\n        AppStore.useLibraries.push(library)\r\n    },\r\n    timer: 0,\r\n    addTimer: action(() => {\r\n        AppStore.timer += 5\r\n    }),\r\n    resetTimer: action(() => {\r\n        AppStore.timer = 0\r\n    })\r\n})\r\n\r\nexport default AppStore","import {observable} from \"mobx\"\r\n\r\nconst ElseStore = observable({\r\n    toDoList: [\r\n        'learn english',\r\n        'brush leetcode'\r\n    ]\r\n})\r\n\r\nexport default ElseStore","import {createStore, combineReducers} from 'redux'\r\nimport {counter, toDoList} from './reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    counter,\r\n    toDoList\r\n})\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store\r\n","const counter = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case \"increment\":\r\n            return state + 1\r\n        case \"decrement\":\r\n            return state - 1\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst toDoList = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'add':\r\n            return [...state, {\r\n                task: action.task,\r\n                completed: false\r\n            }]\r\n        case 'delete':\r\n            return state.filter((_, idx) => idx !== action.idx)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport {\r\n    counter,\r\n    toDoList\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals'\nimport PageRouter from \"./router\"\nimport {Provider as MobxProvider} from 'mobx-react'\nimport {Provider as ReduxProvider} from 'react-redux'\n// mobx store\nimport * as stores from \"./store\"\n// redux store\nimport store from \"./store/redux/store\";\nimport './index.css'\nimport 'zarm/dist/zarm.min.css'\n\nReactDOM.render(\n    // 注入 redux: store={store}\n    // 注入 mobx: {...stores}\n    <MobxProvider {...stores}>\n        <ReduxProvider store={store}>\n            <React.StrictMode>\n                <PageRouter/>\n            </React.StrictMode>\n        </ReduxProvider>\n    </MobxProvider>,\n    document.getElementById('root')\n)\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"verificationCodeInput\":\"VerificationCodeInput_verificationCodeInput__3ZViA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Dialog_overlay__StGKD\",\"wrapper\":\"Dialog_wrapper__2pq6O\"};"],"sourceRoot":""}